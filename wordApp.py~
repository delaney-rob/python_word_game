from flask import Flask, render_template, url_for, request, redirect, flash, session

import random, linecache, re, time, collections
from threading import Thread

app = Flask(__name__)

###############################################################################################
# A1. Display landing Page - gives user a button to start the game

@app.route('/')
def display_home():
   #session['userName'] = request.form['userName']
   #print(session['userName'])
    return render_template("wordHome.html",
                            the_title="Word Game",
                            startGame=url_for("getWord"),)
                            #show_url=url_for("showallcomments"),
			                #the_person=session.get('last_visitor', 'unknown'), )
			                
###############################################################################################	
# A2. Display game start page, display word to user		                
			                
@app.route('/startGame')
def getWord():
    num = cWordLists()
    ranLine = linecache.getline('7_over_wordList', random.randint(1, num))
    ranLine = ranLine.lower()
    print('test02')
    session['sTime'] = time.time()
    print('Time : ' + str(round(session['sTime'], 2)))
    return render_template("wordStart.html",
                            the_title="Enter 7 Words",
                            ranWord = ranLine,
                            subWords=url_for("scanWords"),)
                            
def cWordLists():                       
    with open('/usr/share/dict/words') as wordListS:                
        with open('3_over_wordList','w') as bList:
            for lineB in wordListS:
                lineB = lineB[:-1]
                if re.match("^[a-zA-Z]*$", lineB): 
                #if '\'' not in lineB:
                    if len(lineB) >= 3 :
                        print(lineB, file=bList)
                    
    with open('/usr/share/dict/words') as wordListL:
        i = 0
        with open('7_over_wordList','w') as aList:
            for lineA in wordListL:
                lineA = lineA[:-1]
                if re.match("^[a-zA-Z]*$", lineA):
                #if '\'' not in lineA:
                    if len(lineA) >= 7:
                        i += 1       
                        print(lineA, file=aList)
        return i
        
################################################################################################

@app.route('/submitWords', methods=["POST"])
def scanWords():
    print('test01')
    all_ok=True
    timeTaken = str(round(time.time() - session['sTime'], 2))
    
    
        
    error = []
    if request.form['word1'] == '' or len(request.form['word1']) <=2:
        all_ok = False
        error.append("Word 1 cannot be empty or less than three letters long")
    else:
        error.append('')
    if request.form['word2'] == '' or len(request.form['word2']) <=2:
        all_ok = False
        error.append("Word 2 cannot be empty or less than three letters long")
    else:
        error.append('')
    if request.form['word3'] == '' or len(request.form['word3']) <=2:
        all_ok = False
        error.append("Word 3 cannot be empty or less than three letters long")
    else:
        error.append('')
    if request.form['word4'] == '' or len(request.form['word4']) <=2:
        all_ok = False
        error.append("Word 4 cannot be empty or less than three letters long")
    else:
        error.append('')
    if request.form['word5'] == '' or len(request.form['word5']) <=2:
        all_ok = False
        error.append("Word 5 cannot be empty or less than three letters long")
    else:
        error.append('')
    if request.form['word6'] == '' or len(request.form['word6']) <=2:
        all_ok = False
        error.append("Word 6 cannot be empty or less than three letters long")
    else:
        error.append('')
    if request.form['word7'] == '' or len(request.form['word7']) <=2:
        all_ok = False
        error.append("Word 7 cannot be empty or less than three letters long")
    else:
        error.append('')
    if all_ok == False:
        
        userInputList = []
        userInputList.append(request.form['word1'].lower())
        userInputList.append(request.form['word2'].lower())
        userInputList.append(request.form['word3'].lower())
        userInputList.append(request.form['word4'].lower())
        userInputList.append(request.form['word5'].lower())
        userInputList.append(request.form['word6'].lower())
        userInputList.append(request.form['word7'].lower())
        
        for ind, wrd in enumerate(userInputList):
            if userInputList[ind] == '':
                userInputList[ind] = '*** No Word Entered ***'   
    
        return render_template("wordResults.html",
                                the_title="Your Results",
                                timeTaken = timeTaken,
                                word1 = userInputList[0],
                                word2 = userInputList[1],
                                word3 = userInputList[2],
                                word4 = userInputList[3],
                                word5 = userInputList[4],
                                word6 = userInputList[5],
                                word7 = userInputList[6],
                                result1 = error[0],
                                result2 = error[1],
                                result3 = error[2],
                                result4 = error[3],
                                result5 = error[4],
                                result6 = error[5],
                                result7 = error[6],
                                home_link=url_for("display_home"),)
    
    if all_ok:
        userInputList = []
        userInputList.append(request.form['word1'].lower())
        userInputList.append(request.form['word2'].lower())
        userInputList.append(request.form['word3'].lower())
        userInputList.append(request.form['word4'].lower())
        userInputList.append(request.form['word5'].lower())
        userInputList.append(request.form['word6'].lower())
        userInputList.append(request.form['word7'].lower())
    
    duplicates = []
    duplicates = list(dupCheck(userInputList))
    if len(duplicates) != 0:
        print(request.form['word1'].lower())
        print(request.form['word2'].lower())
        return render_template("wordResults.html",
                                the_title="Your Results",
                                timeTaken = timeTaken,
                                word1 = request.form['word1'].lower(),
                                word2 = request.form['word2'].lower(),
                                word3 = request.form['word3'].lower(),
                                word4 = request.form['word4'].lower(),
                                word5 = request.form['word5'].lower(),
                                word6 = request.form['word6'].lower(),
                                word7 = request.form['word7'].lower(),
                                home_link=url_for("display_home"),)
        
        
    '''return render_template("wordHome.html",
                            the_title="Word Game",
                            startGame=url_for("getWord"),)'''

def dupCheck(userInputList):
    dupSet = collections.Counter(userInputList)
    dups = [i for i in dupSet if dupSet[i]>1]
    
    return dups
        
        
    '''return render_template("wordResults.html",
                            the_title="Your Results",
                            home_link=url_for("display_home"),)'''
    #else:
    '''return render_template("wordHome.html",
                            the_title="Word Game",
                            startGame=url_for("getWord"),)'''

app.config['SECRET_KEY'] = 'thisismysecretkeywhichyouwillneverguesshahahahahahahaha'
app.run(debug=True)
